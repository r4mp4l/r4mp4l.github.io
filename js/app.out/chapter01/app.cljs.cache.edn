;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name chapter01.app, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core}, :uses {atom reagent.core}, :defs {some-component {:protocol-inline nil, :meta {:file "/Users/niko/.boot/cache/tmp/Users/niko/Dropbox/clojure-on-the-go/CLJS-BOOK/samples/chapter01/aog/-p9hf6h/chapter01/app.cljs", :line 4, :column 7, :end-line 4, :end-column 21, :arglists (quote ([]))}, :name chapter01.app/some-component, :variadic false, :file "/Users/niko/.boot/cache/tmp/Users/niko/Dropbox/clojure-on-the-go/CLJS-BOOK/samples/chapter01/aog/-p9hf6h/chapter01/app.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, calling-component {:protocol-inline nil, :meta {:file "/Users/niko/.boot/cache/tmp/Users/niko/Dropbox/clojure-on-the-go/CLJS-BOOK/samples/chapter01/aog/-p9hf6h/chapter01/app.cljs", :line 12, :column 7, :end-line 12, :end-column 24, :arglists (quote ([]))}, :name chapter01.app/calling-component, :variadic false, :file "/Users/niko/.boot/cache/tmp/Users/niko/Dropbox/clojure-on-the-go/CLJS-BOOK/samples/chapter01/aog/-p9hf6h/chapter01/app.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/niko/.boot/cache/tmp/Users/niko/Dropbox/clojure-on-the-go/CLJS-BOOK/samples/chapter01/aog/-p9hf6h/chapter01/app.cljs", :line 17, :column 7, :end-line 17, :end-column 11, :arglists (quote ([]))}, :name chapter01.app/init, :variadic false, :file "/Users/niko/.boot/cache/tmp/Users/niko/Dropbox/clojure-on-the-go/CLJS-BOOK/samples/chapter01/aog/-p9hf6h/chapter01/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:color :strong :h5 :p.someclass :style :div :span}, :order [:div :h5 :p.someclass :strong :span :style :color]}, :doc nil}